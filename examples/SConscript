Import(['env', 'platform', 'PKG_CONFIG'])

COMMON_SOURCE = ['Frame.cpp',
		 'AudioIO.cpp',
		 'WaveformFrame.cpp',
		 'SpectrumFrame.cpp',
		 'SpectrumBinsFrame.cpp',
		 'GridMapFrame.cpp',
		 'SmoothGridMapFrame.cpp',
		 'IsolinesFrame.cpp',
		 'GridMapTrajectoryFrame.cpp',
		 'CircleMapFrame.cpp',
		 'SmoothCircleMapFrame.cpp',
		 'BeatTrackerFrame.cpp',
		 'GlWindow.cpp',
		 'IsolineExtractor.cpp',
		 'IsolineRenderer.cpp']

DEMO_SOURCE = ['Demo.cpp'] + COMMON_SOURCE

LAB_SOURCE = ['Lab.cpp'] + COMMON_SOURCE
		 
CPPPATH = ['../include']
env.Append(CPPPATH = CPPPATH)

LIBPATH = ['../src']
env.Append(LIBPATH = LIBPATH)

LIBLIST = [['portaudio', 'portaudio.h'],
	   ['sndfile', 'sndfile.h'],
	   ['sonotopy', 'sonotopy.hpp'],
	   ['pthread', 'pthread.h']]

if platform == 'posix':
	LIBLIST += [['glut', 'GL/glut.h']]
elif platform == 'darwin':
	env.Append(FRAMEWORKS = ['OpenGL', 'GLUT'])

try:
	for lib in ['portaudio-2.0', 'sndfile']:
		env.MergeFlags(['!%s --cflags --libs %s' % (PKG_CONFIG, lib)])
except:
	pass

# check the availability of libraries
if not GetOption('clean'):
	conf = Configure(env)
	for (lib, headers) in LIBLIST:
		if not conf.CheckLibWithHeader(lib, headers, 'c++'):
			print "error: '%s' must be installed!" % lib
			Exit(1)
	env = conf.Finish()

env.Program(target = 'Demo', source = DEMO_SOURCE)
env.Program(target = 'Lab', source = LAB_SOURCE)
