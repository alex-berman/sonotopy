Import('env', 'platform', 'Prefix')

TARGET = 'sonotopy'

SOURCE = ['BeatTracker.cpp', 'CircleMap.cpp',
          'CircleMapParameters.cpp', 'CircleTopology.cpp', 'CircularBuffer.cpp',
          'GridMap.cpp', 'GridMapParameters.cpp', 'Normalizer.cpp',
          'SOM.cpp', 'Smoother.cpp', 'SpectrumMap.cpp', 'SpectrumMapParameters.cpp',
          'SpectrumAnalyzer.cpp', 'SpectrumBinDivider.cpp', 'Random.cpp',
          'Stopwatch.cpp', 'Topology.cpp', 'RectGridTopology.cpp',
          'DisjointGridMap.cpp', 'DisjointGridTopology.cpp', 'EventDetector.cpp']
 
CPPPATH = ['../../../include/sonotopy']
env.Append(CPPPATH = CPPPATH)

LibSonotopy = env.StaticLibrary(target = TARGET, source = SOURCE)

env.Install(Prefix + '/lib', LibSonotopy)
